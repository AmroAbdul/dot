#@abdulvahitamro

## this is a custom tmux config

# set the prefix (default is C-b)


### dictionary:
# C = control key
# S = shift key



# use set for setting variables & -g flags for global vars
set -g prefix C-z

# Remove the old prefix
# use unbind to remove a key

unbind C-b

# send Ctrl+z to applications by passing  it twice
bind C-z send-prefix



# enable mouse
set -g mouse on 

# misc options

# Increase scrollback buffer size 
set -g history-limit 50000

# Increase tmux messages duration
set -g display-time 4000
# Upgrade $TERM
set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",*256col*:Tc"




# Focus events enabled for terminals that support them
set -g focus-events on
# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

set-window-option -g display-panes-time 1500






# from powerline
run-shell "tmux set-environment -g TMUX_VERSION_MAJOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1 | sed 's/[^0-9]*//g')"
run-shell "tmux set-environment -g TMUX_VERSION_MINOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f2 | sed 's/[^0-9]*//g')"




# change keybinds (vi/emacs)
set -g status-keys emacs
## keybindings
# to set keybind use bind 
bind C-p previous-window
bind C-n next-window
bind enter copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key C-o rotate-window
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Wayland clipboard
if -b '[ "$XDG_SESSION_TYPE" = "wayland" ] && command -v wl-copy > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | wl-copy"'
# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | pbcopy"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - > /dev/clipboard"'

# Killing panes/windows/session
bind x kill-pane
bind X kill-window
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session
# toggle mouse
bind m run  "~/.tmux/scripts/tmux_mouse_toggle"



# detach 
bind d detach
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'
# Hide status bar on demand
bind C-h if -F '#{s/off//:status}' 'set status off' 'set status on'


# changing layouts
bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical


bind-key t clock-mode
bind-key q display-panes
bind-key c new-window
bind-key a last-pane
bind Tab last-window        # move to last active window


bind E new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"

bind + resize-pane -Z

# Split panes
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"




bind-key L clear-history
bind-key : command-prompt
# keybind for reload configuration
bind r source-file ~/.tmux.conf \; display-message "$HOME/.tmux.conf reloaded."



# tpm (tmux plugin manager)
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin "arcticicestudio/nord-tmux"


## plugins options

set -g @nord_tmux_no_patched_font "0"


## status bar

# enable/disavble status bar
#set -g status off
set -g status on
# change status postion
set -g status-position bottom
set -g status-justify left
set -g status-right-length 100

# Keep refreshing 'status-left' & 'status-right' more often 
set -g status-interval 5
# change status background
# set -g status-bg  cyan
#
# set -g window-status-style bg=yellow
# set -g window-status-current-style bg=red,fg=white













# _toggle_mouse() {
#   old=$(tmux show -gv mouse)
#   new=""
#
#   if [ "$old" = "on" ]; then
#     new="off"
#   else
#     new="on"
#   fi
#
#   tmux set -g mouse $new
# }





# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'


## tokyonight night colorscheme for tmux

#!/usr/bin/env bash

# TokyoNight colors for Tmux

#set -g mode-style "fg=#7aa2f7,bg=#3b4261"

#set -g message-style "fg=#7aa2f7,bg=#3b4261"
#set -g message-command-style "fg=#7aa2f7,bg=#3b4261"
#
#set -g pane-border-style "fg=#3b4261"
#set -g pane-active-border-style "fg=#7aa2f7"
#
#set -g status "on"
#set -g status-justify "left"
#
#set -g status-style "fg=#7aa2f7,bg=#16161e"
#
#set -g status-left-length "100"
#set -g status-right-length "100"
#
#set -g status-left-style NONE
#set -g status-right-style NONE
#
#set -g status-left "#[fg=#15161e,bg=#7aa2f7,bold] #S #[fg=#7aa2f7,bg=#16161e,nobold,nounderscore,noitalics]"
#set -g status-right "#[fg=#16161e,bg=#16161e,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#16161e] #{prefix_highlight} #[fg=#3b4261,bg=#16161e,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#3b4261] %Y-%m-%d  %I:%M %p #[fg=#7aa2f7,bg=#3b4261,nobold,nounderscore,noitalics]#[fg=#15161e,bg=#7aa2f7,bold] #h "
#if-shell '[ "$(tmux show-option -gqv "clock-mode-style")" == "24" ]' {
#  set -g status-right "#[fg=#16161e,bg=#16161e,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#16161e] #{prefix_highlight} #[fg=#3b4261,bg=#16161e,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#3b4261] %Y-%m-%d  %H:%M #[fg=#7aa2f7,bg=#3b4261,nobold,nounderscore,noitalics]#[fg=#15161e,bg=#7aa2f7,bold] #h "
#}
#
#setw -g window-status-activity-style "underscore,fg=#a9b1d6,bg=#16161e"
#setw -g window-status-separator ""
#setw -g window-status-style "NONE,fg=#a9b1d6,bg=#16161e"
#setw -g window-status-format "#[fg=#16161e,bg=#16161e,nobold,nounderscore,noitalics]#[default] #I  #W #F #[fg=#16161e,bg=#16161e,nobold,nounderscore,noitalics]"
#setw -g window-status-current-format "#[fg=#16161e,bg=#3b4261,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#3b4261,bold] #I  #W #F #[fg=#3b4261,bg=#16161e,nobold,nounderscore,noitalics]"
#
## tmux-plugins/tmux-prefix-highlight support
#set -g @prefix_highlight_output_prefix "#[fg=#e0af68]#[bg=#16161e]#[fg=#16161e]#[bg=#e0af68]"
#set -g @prefix_highlight_output_suffix ""

